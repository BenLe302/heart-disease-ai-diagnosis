# Configuration d'environnement pour Heart Disease AI Diagnosis
# Développé par Dady Akrou Cyrille - UQTR Data Science Graduate
# 
# Copiez ce fichier vers .env et modifiez les valeurs selon vos besoins
# IMPORTANT: Ne jamais commiter le fichier .env avec de vraies valeurs

# =============================================================================
# CONFIGURATION GÉNÉRALE
# =============================================================================

# Environnement de déploiement
ENVIRONMENT=development
# Options: development, staging, production

# Mode debug
DEBUG=true

# Niveau de logging
LOG_LEVEL=INFO
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL

# Répertoire de logs
LOG_DIR=./logs

# =============================================================================
# CONFIGURATION STREAMLIT
# =============================================================================

# Configuration du serveur Streamlit
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_ADDRESS=0.0.0.0
STREAMLIT_SERVER_HEADLESS=true
STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
STREAMLIT_SERVER_ENABLE_CORS=false
STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=true

# Thème Streamlit
STREAMLIT_THEME_PRIMARY_COLOR=#FF6B6B
STREAMLIT_THEME_BACKGROUND_COLOR=#FFFFFF
STREAMLIT_THEME_SECONDARY_BACKGROUND_COLOR=#F0F2F6
STREAMLIT_THEME_TEXT_COLOR=#262730
STREAMLIT_THEME_FONT=sans serif

# Configuration de cache
STREAMLIT_CLIENT_CACHING=true
STREAMLIT_CLIENT_DISPLAY_ENABLED=true

# =============================================================================
# CONFIGURATION MACHINE LEARNING
# =============================================================================

# Modèles à utiliser (séparés par des virgules)
ML_MODELS=logistic_regression,random_forest,gradient_boosting,xgboost,catboost

# Modèle par défaut pour les prédictions
DEFAULT_MODEL=random_forest

# Seuil de probabilité pour classification
CLASSIFICATION_THRESHOLD=0.5

# Nombre de jobs pour l'entraînement parallèle
N_JOBS=-1

# Graine aléatoire pour reproductibilité
RANDOM_STATE=42

# Validation croisée
CV_FOLDS=5

# =============================================================================
# CONFIGURATION BASE DE DONNÉES
# =============================================================================

# PostgreSQL (pour analytics et logs)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=heart_disease_analytics
DB_USER=heart_disease_user
DB_PASSWORD=secure_password_change_me
DB_SSL_MODE=prefer

# URL de connexion complète (alternative)
# DATABASE_URL=postgresql://user:password@localhost:5432/dbname

# Pool de connexions
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10
DB_POOL_TIMEOUT=30

# =============================================================================
# CONFIGURATION REDIS (CACHE)
# =============================================================================

# Configuration Redis
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# URL de connexion Redis
# REDIS_URL=redis://localhost:6379/0

# TTL par défaut pour le cache (en secondes)
CACHE_TTL=3600

# Préfixe pour les clés de cache
CACHE_PREFIX=heart_disease:

# =============================================================================
# CONFIGURATION SÉCURITÉ
# =============================================================================

# Clé secrète pour sessions (générez une clé unique !)
SECRET_KEY=your-secret-key-change-me-in-production

# Configuration CORS
CORS_ORIGINS=http://localhost:8501,http://127.0.0.1:8501

# Configuration SSL/TLS
SSL_CERT_PATH=./config/ssl/cert.pem
SSL_KEY_PATH=./config/ssl/key.pem

# Authentification (si implémentée)
AUTH_ENABLED=false
JWT_SECRET_KEY=your-jwt-secret-key
JWT_EXPIRATION_HOURS=24

# =============================================================================
# CONFIGURATION MONITORING
# =============================================================================

# Prometheus
PROMETHEUS_PORT=9090
PROMETHEUS_SCRAPE_INTERVAL=15s

# Grafana
GRAFANA_PORT=3000
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=heart-disease-admin

# Métriques d'application
METRICS_ENABLED=true
METRICS_PORT=8502

# Health checks
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_ENDPOINT=/healthz

# =============================================================================
# CONFIGURATION EMAIL (NOTIFICATIONS)
# =============================================================================

# Configuration SMTP
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USE_TLS=true
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# Emails de notification
ADMIN_EMAIL=admin@example.com
ALERT_EMAIL=alerts@example.com

# =============================================================================
# CONFIGURATION DÉVELOPPEMENT
# =============================================================================

# Jupyter Lab
JUPYTER_PORT=8888
JUPYTER_TOKEN=heart-disease-dev
JUPYTER_PASSWORD=

# Hot reload pour développement
HOT_RELOAD=true

# Profiling
PROFILING_ENABLED=false

# =============================================================================
# CONFIGURATION TESTS
# =============================================================================

# Configuration pour les tests
TESTING=false
TEST_DATABASE_URL=sqlite:///test.db
TEST_REDIS_URL=redis://localhost:6379/1

# Coverage
COVERAGE_THRESHOLD=80

# =============================================================================
# CONFIGURATION DOCKER
# =============================================================================

# Configuration Docker Compose
COMPOSE_PROJECT_NAME=heart-disease-ai
COMPOSE_FILE=docker-compose.yml

# Profils Docker Compose
COMPOSE_PROFILES=
# Options: development,production,monitoring,testing,cache,analytics

# =============================================================================
# CONFIGURATION CLOUD (SI DÉPLOYÉ)
# =============================================================================

# AWS (si utilisé)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_S3_BUCKET=heart-disease-models

# Google Cloud (si utilisé)
GOOGLE_APPLICATION_CREDENTIALS=./config/gcp-credentials.json
GCP_PROJECT_ID=heart-disease-ai

# Azure (si utilisé)
AZURE_STORAGE_CONNECTION_STRING=
AZURE_CONTAINER_NAME=models

# =============================================================================
# CONFIGURATION MÉDICALE
# =============================================================================

# Avertissements médicaux
MEDICAL_DISCLAIMER_ENABLED=true
MEDICAL_DISCLAIMER_REQUIRED=true

# Conformité réglementaire
HIPAA_COMPLIANCE_MODE=true
GDPR_COMPLIANCE_MODE=true

# Audit médical
MEDICAL_AUDIT_ENABLED=true
MEDICAL_AUDIT_LOG_PATH=./logs/medical_audit.log

# Limites de sécurité
MAX_PREDICTIONS_PER_HOUR=100
MAX_PREDICTIONS_PER_DAY=1000

# =============================================================================
# CONFIGURATION PERFORMANCE
# =============================================================================

# Limites de ressources
MAX_MEMORY_MB=1024
MAX_CPU_PERCENT=80

# Timeout
REQUEST_TIMEOUT=30
MODEL_PREDICTION_TIMEOUT=10

# Cache de modèles
MODEL_CACHE_ENABLED=true
MODEL_CACHE_SIZE_MB=256

# =============================================================================
# VARIABLES PERSONNALISÉES
# =============================================================================

# Ajoutez ici vos variables personnalisées
# CUSTOM_VARIABLE=value

# =============================================================================
# NOTES IMPORTANTES
# =============================================================================
#
# 1. Copiez ce fichier vers .env : cp .env.example .env
# 2. Modifiez les valeurs selon votre environnement
# 3. Ne jamais commiter le fichier .env
# 4. Utilisez des mots de passe forts en production
# 5. Générez des clés secrètes uniques
# 6. Activez SSL/TLS en production
# 7. Configurez les sauvegardes de base de données
# 8. Surveillez les logs et métriques
# 9. Respectez les réglementations médicales
# 10. Testez la configuration avant déploiement
#
# =============================================================================